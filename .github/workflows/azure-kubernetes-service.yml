name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "AKSMLOpsCourse"
  CONTAINER_NAME: "mlapp"
  RESOURCE_GROUP: "Kubernetes"
  CLUSTER_NAME: "ml-app"
  DEPLOYMENT_MANIFEST_PATH: "kubernetes_manifest.yml"

jobs:

  build:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: List ML Models
        run: |
          ls -l ./2023-05-14

      - name: Copy model to serving_base container - Commit changes to new image - Tag commited image
        run: |
          docker run -d --name serving_base tensorflow/serving
          docker ps

          docker cp ./2023-05-14 serving_base:/models/2023-05-14
          docker exec -it serving_base ls /models/2023-05-14
          
          docker commit --change "ENV MODEL_NAME 2023-05-14" serving_base my-registry/mymodel-serving
          docker stop serving_base
          
          docker tag my-registry/mymodel-serving aksmlopscourse.azurecr.io/mymodel-serving
          docker images
          
          
      - name: List available images
        run: |
          docker images
          
      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
          docker tag my-registry/mymodel-serving aksmlopscourse.azurecr.io/mymodel-serving
          docker push aksmlopscourse.azurecr.io/mymodel-serving
      # az acr build --image aksmlopscourse.azurecr.io/mymodel-serving:latest --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .
      # az acr build --image ${{ env.CONTAINER_NAME }}:latest --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
